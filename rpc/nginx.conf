worker_processes auto;
worker_rlimit_nofile 65535;

events {
    worker_connections 2048;
    multi_accept on;
}

http {
    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;

    # MIME types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Cache settings
    proxy_cache_path /tmp/nginx_cache 
                     levels=1:2 
                     keys_zone=rpc_cache:10m 
                     max_size=10g 
                     inactive=60m 
                     use_temp_path=off;

    # CORS map
    map $request_method $cors_method {
        OPTIONS 1;
        default 0;
    }

    server {
        listen ${PORT};
        
        location / {
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*' always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'Content-Type,Authorization' always;
                add_header 'Access-Control-Max-Age' 86400 always;
                return 204;
            }

            proxy_pass https://base-mainnet.g.alchemy.com/v2/jFjopZDrbRnD8hRKINkO7BOwW9YH9iLD;
            
            # Basic proxy settings
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Content-Type application/json;
            
            # Enable caching
            proxy_cache rpc_cache;
            proxy_cache_methods POST;
            proxy_cache_key "$request_body";
            proxy_cache_valid 200 22s;
            
            # Only cache eth_call requests
            proxy_cache_bypass $http_cache_bypass;
            proxy_no_cache $no_eth_call;
            
            set $no_eth_call 1;
            if ($request_body ~ "eth_call") {
                set $no_eth_call 0;
            }
            
            # CORS headers
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Content-Type,Authorization' always;
            add_header 'Access-Control-Expose-Headers' 'X-Cache-Status,X-Cache-Key' always;
            
            # Debug headers
            add_header X-Cache-Status $upstream_cache_status always;
            add_header X-Cache-Key $request_body always;
        }
    }
}
